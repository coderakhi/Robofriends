{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/scroll.js","components/errorboundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","src","concat","alt","Cardlist","robots","map","user","i","components_Card","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","ErrorBoundary","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","key","value","error","info","setState","Component","App","onSearchChange","event","searchfield","target","_this2","fetch","then","response","json","_this3","filteredRobots","filter","robo","toLowerCase","includes","length","components_SearchBox","components_scroll","errorboundary","components_Cardlist","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.5dbbcc7e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\nconst Card=({name,email,id})=> {\r\n    \r\n   return(\r\n    \r\n       <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n           <img  src={`https://robohash.org/${id}?200*200`}  alt=\"robots\"></img>\r\n           <div>\r\n               <hr></hr>\r\n               <h2>{name}</h2>\r\n               <p>{email}</p>\r\n            </div>\r\n          \r\n       </div>\r\n\r\n   )\r\n\r\n}\r\n\r\nexport default Card;","import Card from './Card';\r\nimport React from 'react';\r\n\r\nconst Cardlist =({robots})=>{\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n             robots.map((user,i) => {\r\n    return <Card id={user.id} name={user.name} email={user.email} />\r\n             })\r\n}\r\n        </div>   \r\n        )\r\n}\r\n\r\nexport default Cardlist","import React from \"react\";\r\n\r\nconst SearchBox=({searchChange})=>{\r\n    return (\r\n        <div className=\"pa2\">\r\n        <input className=\"pa3 ba b--green bg-lightest-blue\"  type='search' placeholder='search robots' onChange={searchChange}/>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll=(props)=> {\r\n    return (\r\n        <div style={{overflowY:\"scroll\", height:\"500px\"}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Scroll;\r\n\r\n","import { FOCUSABLE_SELECTOR } from \"@testing-library/user-event/dist/utils\";\r\nimport React , { Component }from \"react\";\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n\r\ncomponentDidCatch(error,info){\r\n    this.setState({hasError:true});\r\n}\r\n\r\nrender(){\r\n    if (this.hasError){\r\n        return <h1>Oops! This is not good</h1>\r\n    } return this.props.children;\r\n}\r\n\r\n}\r\n\r\nexport default ErrorBoundary","import React, { Component } from \"react\";\r\nimport Cardlist from \"../components/Cardlist\";\r\nimport SearchBox from \"../components/SearchBox.js\";\r\n// import { robots } from \"./robots\";\r\nimport Scroll from '../components/scroll';\r\nimport \"../containers/App.css\";\r\nimport ErrorBoundary from \"../components/errorboundary\";\r\n// import './loader.svg';\r\n\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: '',\r\n\r\n        }\r\n    }\r\n\r\n    //    this function gets called after render \r\n    componentDidMount() {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(user => this.setState({ robots: user }))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n\r\n\r\n    //    render gets called after constructor\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robo => {\r\n            return robo.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        })\r\n        if (this.state.robots.length === 0) {\r\n\r\n            return (\r\n\r\n                <div className=\"tc\">\r\n\r\n                    <h1>LOADING</h1>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f1\">RoboFriends</h1>\r\n\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            < Cardlist robots={filteredRobots} />\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n <React.StrictMode>\n   <App/>\n  \n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}